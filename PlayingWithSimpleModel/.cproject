<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?>

<cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.ide.configuration.debug.1157187806">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.debug.1157187806" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.debug.1157187806" name="Debug" parent="com.nvidia.cuda.ide.configuration.debug">
					<folderInfo id="com.nvidia.cuda.ide.configuration.debug.1157187806." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.exe.debug.705241583" name="CUDA Toolkit 5.0" superClass="com.nvidia.cuda.tools.toolchain.exe.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.133880276" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/PlayingWithSimpleModel/Debug}" id="com.nvidia.cuda.ide.builder.655801311" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" stopOnErr="false" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.1759005912" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1559927287" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.2080272093" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level" value="true" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.798274304" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.1759411395" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<inputType id="nvcc.compiler.input.cu.1759664191" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.602390737" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.1259449161" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.1718782884" name="NVCC Linker" superClass="nvcc.linker.base">
								<inputType id="nvcc.linker.input.222115625" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.1000807676" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.2039108480" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1573185254" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry excluding="src" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
						<entry excluding="FirstTry5.cpp|FirstTry4.cpp|FirstTry3.cpp|FirstTry2.cpp|FirstTry.cpp" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="true">
					<sass major="2" minor="1"/>
					<ptx major="2" minor="0"/>
				</executable>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.configuration.release.944893754">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.release.944893754" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.release.944893754" name="Release" parent="com.nvidia.cuda.ide.configuration.release">
					<folderInfo id="com.nvidia.cuda.ide.configuration.release.944893754." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.exe.release.750567013" name="CUDA Toolkit 5.0" superClass="com.nvidia.cuda.ide.toolchain.exe.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.1663867740" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/PlayingWithSimpleModel/Release}" id="com.nvidia.cuda.ide.builder.1536676067" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="Gnu Make Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.1603272394" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.443965349" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.1589112027" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.1478371492" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.57251891" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<inputType id="nvcc.compiler.input.cu.815267396" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.1082335246" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.785625287" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.1402530516" name="NVCC Linker" superClass="nvcc.linker.base">
								<inputType id="nvcc.linker.input.1558705749" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.694217839" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1068490119" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1307865093" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
					<sourceEntries>
						<entry excluding="src" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name=""/>
						<entry excluding="FirstTry5.cpp|FirstTry4.cpp|FirstTry3.cpp|FirstTry2.cpp|FirstTry.cpp" flags="VALUE_WORKSPACE_PATH|RESOLVED" kind="sourcePath" name="src"/>
					</sourceEntries>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="true">
					<sass major="2" minor="1"/>
					<ptx major="2" minor="0"/>
				</executable>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="PlayingWithSimpleModel.com.nvidia.cuda.ide.exe.1019399198" name="Executable" projectType="com.nvidia.cuda.ide.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1157187806;com.nvidia.cuda.ide.configuration.debug.1157187806.;nvcc.compiler.base.1759005912;nvcc.compiler.input.cu.1759664191">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1157187806;com.nvidia.cuda.ide.configuration.debug.1157187806.;nvcc.compiler.base.1759005912;nvcc.compiler.input.c.1259449161">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.1157187806;com.nvidia.cuda.ide.configuration.debug.1157187806.;nvcc.compiler.base.1759005912;nvcc.compiler.input.cpp.602390737">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets">
		<buildTargets>
			<target name="randKnuth.cpp" path="src" targetID="org.eclipse.cdt.build.MakeTargetBuilder">
				<buildCommand>make</buildCommand>
				<buildArguments/>
				<buildTarget>randKnuth.cpp</buildTarget>
				<stopOnError>true</stopOnError>
				<useDefaultCommand>true</useDefaultCommand>
				<runAllBuilders>true</runAllBuilders>
			</target>
			<target name="randTest.cpp" path="src" targetID="org.eclipse.cdt.build.MakeTargetBuilder">
				<buildCommand>make</buildCommand>
				<buildArguments/>
				<buildTarget>randTest.cpp</buildTarget>
				<stopOnError>true</stopOnError>
				<useDefaultCommand>true</useDefaultCommand>
				<runAllBuilders>true</runAllBuilders>
			</target>
		</buildTargets>
	</storageModule>
	<storageModule moduleId="refreshScope" versionNumber="1">
		<resource resourceType="PROJECT" workspacePath="/PlayingWithSimpleModel"/>
	</storageModule>
</cproject>
